/*The selector below(*) is used to reset the entire page first of all.
Basically a base format-er.
It deletes all default formatting on the intitial webpage.*/
/*01*/
*{
    margin: 0;
    padding: 0;
    box-sizing: 0;
}

/*02*/
body{
    /*Using background-color property actually changes the color of the body background.
    However, to use linear gradient as the argument, we use background-image as the property*/
    background-image: linear-gradient(45deg, rgb(118, 191, 204), rgb(120, 209, 224));
    /*The color property below affects all the fonts on the webpage*/
    color: white;
    /*The font-family specifies the font-type. We imported Poiret from google,
    using the link within the html head tag
    San serif is the backup font type*/
    font-family: "Poiret", sans-serif;
    /*Specifies the minimum heihgt of every element on the webpage*/
    min-height: 100vh;
}

/*03*/
header{
    font-size: 1.5rem;
}

/*The selector below is important. Notice how we said "header, form".
This means we are selecting both the header and form that are in the same order.
This order is based on our html document order.
Our header and form have the same order, hence we can style both of them using this selector.
Compare this selector to the 05 css style*/
/*04*/
header, form{
    min-height: 20vh;
    /*The next three properties are used to center the selected elements on the page*/
    display: flex; /*display flex allows us to make use of the flex properties*/
    justify-content: center; /*justify-content controls the horizontal property*/
    align-items: center; /*align-items controls the vertical property*/
}

/*The selector below is an example where we selected html elements using the parent and child property.
form is the parent, and input is one child of that parent. 
Same logic applies to form(parent) button(child)
Compare this selector to the 04 css style*/
/*05*/
form input, form button{
/*This styles the input form as well as the icon button we added*/
    padding: 0.5rem;/*creates a small space between the element and it's boundary*/
    font-size: 2rem;/*controls font size*/
    border: none;/*removes the border that was around it.*/
    /*consder commenting this out to see it's effect*/
    background: white;/*controls the properties of the background.*/
}

/*This selector is similar to the one from 05.
The css here blew my mind. It's the first time I was exposed to some properties.
For example, the cursor property and the transition property.
Consider explorting more of these properties and their parameters in the future.*/
/*06*/
form button{
    color: /*rgb(118, 191, 204)*/ grey;
    background: white;
    cursor: pointer;/*I'm not even sure what this does yet.*/
    /*LOL!!! So the cursor property specifies the type of cursor you went when your cursor 
    glides over the specific object.*/
    transition: all 0.3s ease;/*I have no idea either.*/
}

/*This selector is an instance selector.
Once we hover over the form button, we want some style to take effect.*/
/*Consider commenting this code block out to notice the difference*/
/*07*/
form button:hover{
    background: rgb(118, 191, 204);
    color: white;   
}

/* This selector styles the container for all our UI and LI elements.*/
/*08*/
.todo-container{
    display: flex;
    justify-content: center;
    align-items: center;
    /*All the code block above centers the elements of that div on screen.*/
}

/*This styles our UL element that houses the LI that will be created.*/
/*09*/
.todo-list{
    min-width: 30%;
    list-style: none;/*This removes those dots that come with a list element by default*/
}

/*This styles the several LI elements that will be created inside the UL element.
We are actually styling the div that houses each LI element and two buttons.*/
/*10*/
.todo{
    margin: 0.5rem;/*We've gone over margin before*/
    /*padding: 0.5rem;/*We've gone over padding before*/
    background: white;/*We've gone over background before*/
    color: black;
    font-size: 1.5rem;
    display: flex;
    /*wihtout this, the elements inside this div(li, check-btn & trash-btn would not be 
    displayed side by side. Try to toggle the property off to appreciate it's effect.*/
    justify-content: space-between;
    /*This creates a space between each element, however, This space is removed when we applied
    the flex of 1 to the li element. check the 11 css below.*/
    align-items: center;/*align element vertically.*/
    transition: all 1s ease;/*this transition takes effect after the user clicks the check button*/
}

/*This styles the several LI element only.*/
/*11*/
.todo li{
    flex: 1;
}

/*This styles the buttons we created.*/
/*12*/
.complete-btn, .trash-btn{
    background: rgb(2, 87, 102);
    color: white;
    border: none;
    padding: 1rem;
    cursor: pointer;
    font-size: 1rem;
}

/*This styles the complete button we created.*/
/*13*/
.complete-btn{
    background: rgb(193, 255, 100);
}

/*14*/
.todo-item{
    padding: 0rem 0.5rem;
}

/*This removes the pointer abilities of the buttons.*/
/*15*/
.fa-trash, .fa-check{
   pointer-events: none; 
}

.completed{
    text-decoration: line-through;
    opacity: 0.5;/*This makes the text transparent*/
}

.fall{
    transform: translateY(8rem) rotateZ(20deg);
    opacity: 0;
}

.trash-btn:hover{
    background: rgb(199, 39, 39);
    color: white; 
}

.complete-btn:hover{
    background: lightgreen;
    color: green; 
}

/*The followin code blocks are used to style the Select element*/
/*01:- We remove all default formatting in the select element*/
select{
    -webkit-appearance: none;
    /*This is a webkit that helps in styling HTML elements to resemble native UIs.*/
    -moz-appearance: none;
    /*This is a webkit that helps in styling HTML elements to resemble native UIs.*/
    appearance: none;
    outline: none;
    border: none;
}

.select{
    margin: 1rem;
    position: relative;
    overflow: hidden;
}

select{
    color: rgb(2, 87, 102);
    width: 10rem;
    cursor: pointer;
    padding: 1rem;
}

/*The  ::after selector is used to specify content that we want to add after an element*/
/*We use this to add the drop down arrow that comes in normal selection models*/
/*After specifyin it with content property, we then style it afterwards.*/
.select::after{
    content: "\25BC";
    /*This content property is linkted to a HTML documentation.*/
    /*Visit https://www.w3schools.com/cssref/css_entities.asp for more info.*/
    position: absolute;
    background: rgb(2, 87, 102);
    top: 0;
    right: 0;
    padding: 1rem;
    pointer-events: none;
    transition: all 0.3s ease;
}

.select:hover::after{
    background: white;
    color: rgb(2, 87, 102);
}